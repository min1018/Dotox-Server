spring.application.name=Dotox

## MySQL8 ??
##spring.datasource.url=jdbc:mysql://???:3306/???????useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#
#spring.datasource.url=jdbc:mysql://localhost:3306/Dotox
#spring.datasource.username=root
#spring.datasource.password=1234
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## ??? SQL ?? ??
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#
## hibernate ??
#spring.jpa.database=mysql
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.generate-ddl=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# MySQL
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://[ip]:3306/[database]useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#spring.datasource.username=[id]
#spring.datasource.password=[password]
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


spring.security.oauth2.client.registration.google.client-id=566890532564-tt49qte30p094a9ar9l78erjjhr899se.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.naver.client-id=K_RYqxH0TgLC2Wv7pOto
spring.security.oauth2.client.registration.naver.client-secret=5gFZdZqBOU
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
naver.token.url=https://nid.naver.com/oauth2.0/token


# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


### H2 ###
# H2 database configuration
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.show-sql=true

# Database schema auto-creation settings
spring.jpa.hibernate.ddl-auto=create

